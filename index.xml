<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Gossip</title><link>https://gossip.rest/</link><description>Recent content on Gossip</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://gossip.rest/index.xml" rel="self" type="application/rss+xml"/><item><title>Clients</title><link>https://gossip.rest/docs/fundamentals/clients/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gossip.rest/docs/fundamentals/clients/</guid><description>Clients are, fundamentally, HTTP servers that allow data exchange between nodes in a Gossip network.
Gossip clients shall have four operating capabilities:
Receiving Lookups from clients (inbound GET) Sending Lookups to clients (outbound GET) Receiving Notifies from clients (inbound POST/PUT) Sending Notifies to clients (outbound POST/PUT) Clients are encouraged to support all above modes, however a client may only implement those that are necessary to the clientâ€™s operation. Of specific note, however, is that a client that supports receiving Notifies MUST additionally support receiving Lookups.</description></item><item><title>Schemas</title><link>https://gossip.rest/docs/fundamentals/schemas/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gossip.rest/docs/fundamentals/schemas/</guid><description>Tier I - Core Attributes All Schemas contain a core set of required data known as Core Attributes. Any client capable of reporting information of this schema type MUST include all Core Attributes. Core Attributes MAY be null depending on the type of data, but the field values must be present.
Tier II - Extended Attributes Schemas may contain an extended set of in-specification data values. This data MAY be provided by clients if available, but clients SHALL NOT expect this data to be present.</description></item><item><title>API Reference</title><link>https://gossip.rest/docs/resources/api-reference/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gossip.rest/docs/resources/api-reference/</guid><description>Authentication There are two modes of authentication for routes in Gossip:
Header-based authentication using the Authorization header. No authentication; anonymous requests. Header-based Authentication For authenticated endpoints the client should pass an Authorization header with their bearer token:
Authorization: Bearer b3c98d3f The format of that Authorization token its left to the implementor
Rate Limits Implementors are free to implement rate limits as needed, the following headers should be sent when a rate limit is active</description></item><item><title>Standard Routes</title><link>https://gossip.rest/docs/resources/standard-routes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gossip.rest/docs/resources/standard-routes/</guid><description>Cases POST /gossip/v1/cases This endpoint notifies the server of a new case
Request Body:
Field Type. Description guild snowflake Guild ID where the case took place. user snowflake User ID where the action was taken. actioner snowflake User ID that created the case. Might be bot ID if it was automated. action case_action Type of action taken. duration long.</description></item><item><title>Search</title><link>https://gossip.rest/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gossip.rest/search/</guid><description/></item></channel></rss>