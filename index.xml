<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Gossip</title><link>https://gossip.rest/</link><description>Recent content on Gossip</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://gossip.rest/index.xml" rel="self" type="application/rss+xml"/><item><title>Clients</title><link>https://gossip.rest/docs/fundamentals/clients/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gossip.rest/docs/fundamentals/clients/</guid><description>Clients are, fundamentally, HTTP servers that allow data exchange between nodes in a Gossip network.
Gossip clients shall have four operating capabilities:
Receiving Lookups from clients (inbound GET) Sending Lookups to clients (outbound GET) Receiving Notifies from clients (inbound POST/PUT) Sending Notifies to clients (outbound POST/PUT) Clients are encouraged to support all above modes, however a client may only implement those that are necessary to the clientâ€™s operation. Of specific note, however, is that a client that supports receiving Notifies MUST additionally support receiving Lookups.</description></item><item><title>Schemas</title><link>https://gossip.rest/docs/fundamentals/schemas/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gossip.rest/docs/fundamentals/schemas/</guid><description>Tier I - Core Attributes All Schemas contain a core set of required data known as Core Attributes. Any client capable of reporting information of this schema type MUST include all Core Attributes. Core Attributes MAY be null depending on the type of data, but the field values must be present.
Tier II - Extended Attributes Schemas may contain an extended set of in-specification data values. This data MAY be provided by clients if available, but clients SHALL NOT expect this data to be present.</description></item><item><title>Cases</title><link>https://gossip.rest/docs/resources/cases/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gossip.rest/docs/resources/cases/</guid><description>Cases are actions tied to a specific user.
They include some standardised properties as well as permitting for some freeform data to be stored in JSON format.
A case object looks like the following:
Field Type Description id snowflake The unique identifier for this case app_id snowflake The application which created this case type string The type of case target_id snowflake The identifier of the targeted user target_name string The name of the targeted user mod_id snowflake Unique identifier for the moderator who created this case mod_name string Name of the moderator who created this case detail string Free-form (and human-readable) description of the case expires int?</description></item><item><title>Search</title><link>https://gossip.rest/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gossip.rest/search/</guid><description/></item></channel></rss>